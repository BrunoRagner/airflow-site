:py:mod:`airflow.providers.apache.livy.sensors.livy`
====================================================

.. py:module:: airflow.providers.apache.livy.sensors.livy

.. autoapi-nested-parse::

   This module contains the Apache Livy sensor.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   airflow.providers.apache.livy.sensors.livy.LivySensor




.. py:class:: LivySensor(*, batch_id: Union[int, str], livy_conn_id: str = 'livy_default', extra_options: Optional[Dict[str, Any]] = None, **kwargs: Any)

   Bases: :py:obj:`airflow.sensors.base.BaseSensorOperator`

   Monitor a Livy sessions for termination.

   :param livy_conn_id: reference to a pre-defined Livy connection
   :type livy_conn_id: str
   :param batch_id: identifier of the monitored batch
   :type batch_id: Union[int, str]
   :type extra_options: A dictionary of options, where key is string and value
       depends on the option that's being modified.

   .. py:attribute:: template_fields
      :annotation: :Sequence[str] = ['batch_id']

      

   .. py:method:: get_hook(self) -> airflow.providers.apache.livy.hooks.livy.LivyHook

      Get valid hook.

      :return: hook
      :rtype: LivyHook


   .. py:method:: poke(self, context: airflow.utils.context.Context) -> bool

      Function that the sensors defined while deriving this class should
      override.



